// <auto-generated />
using System;
using FishingApp.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FishingApp.Data.Migrations
{
    [DbContext(typeof(FishingDbContext))]
    [Migration("20250626141158_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FishingApp.Data.Models.Entities.Discription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FishId")
                        .HasColumnType("int");

                    b.Property<string>("Resirvoir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FishId")
                        .IsUnique();

                    b.ToTable("Discriptions");
                });

            modelBuilder.Entity("FishingApp.Data.Models.Entities.Fish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FishingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FishingId");

                    b.ToTable("Fishes");
                });

            modelBuilder.Entity("FishingApp.Data.Models.Entities.Fishing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Fishings");
                });

            modelBuilder.Entity("FishingApp.Data.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FishingApp.Data.Models.Entities.Discription", b =>
                {
                    b.HasOne("FishingApp.Data.Models.Entities.Fish", "Fish")
                        .WithOne("Discription")
                        .HasForeignKey("FishingApp.Data.Models.Entities.Discription", "FishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fish");
                });

            modelBuilder.Entity("FishingApp.Data.Models.Entities.Fish", b =>
                {
                    b.HasOne("FishingApp.Data.Models.Entities.Fishing", null)
                        .WithMany("Fishes")
                        .HasForeignKey("FishingId");
                });

            modelBuilder.Entity("FishingApp.Data.Models.Entities.Fishing", b =>
                {
                    b.HasOne("FishingApp.Data.Models.Entities.User", "User")
                        .WithMany("Fishings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FishingApp.Data.Models.Entities.Fish", b =>
                {
                    b.Navigation("Discription")
                        .IsRequired();
                });

            modelBuilder.Entity("FishingApp.Data.Models.Entities.Fishing", b =>
                {
                    b.Navigation("Fishes");
                });

            modelBuilder.Entity("FishingApp.Data.Models.Entities.User", b =>
                {
                    b.Navigation("Fishings");
                });
#pragma warning restore 612, 618
        }
    }
}
